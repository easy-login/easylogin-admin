# Generated by Django 2.1 on 2021-01-11 08:22

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, null=True, unique=True)),
                ('username', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=100)),
                ('is_superuser', models.SmallIntegerField(default=0)),
                ('is_active', models.SmallIntegerField(default=1)),
                ('deleted', models.SmallIntegerField(default=0)),
                ('level', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'admins',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('value', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'system_settings',
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=127)),
                ('api_key', models.CharField(max_length=127)),
                ('callback_uris', models.URLField(max_length=2047)),
                ('allowed_ips', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('deleted', models.SmallIntegerField(default=0)),
                ('options', models.CharField(max_length=1023)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'apps',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(max_length=30)),
                ('api_version', models.CharField(max_length=7)),
                ('client_id', models.CharField(max_length=255)),
                ('client_secret', models.CharField(max_length=255)),
                ('permissions', models.CharField(max_length=4095)),
                ('required_fields', models.CharField(max_length=4095, null=True)),
                ('options', models.CharField(max_length=1023, null=True)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loginapp.App')),
            ],
            options={
                'db_table': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('version', models.CharField(max_length=7)),
                ('required_permissions', models.CharField(max_length=1023)),
                ('basic_fields', models.CharField(max_length=4095)),
                ('advanced_fields', models.CharField(max_length=4095)),
                ('options', models.CharField(max_length=4095, null=True)),
            ],
            options={
                'db_table': 'providers',
            },
        ),
        migrations.AlterUniqueTogether(
            name='channel',
            unique_together={('app', 'provider')},
        ),
    ]
